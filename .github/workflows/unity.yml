name: Build & Deploy the Pepemon Unity Project

on:
  push:
    # Run Tests -> Build -> Deploy on main/release/staging
    branches: [main, release, staging]
  pull_request:
    # Run Tests -> Build on PRs targeting main
    branches: [main]
  workflow_dispatch:
    branches: ['*']

permissions:
  contents: write
  checks: write

jobs:
  build:
    name: Build the Pepemon Unity Project
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}

    steps:
      
      - name: Cleanup Docker
        run: |
          docker system prune -af
          docker volume prune -f
          sudo swapoff -a
          sudo rm -f /swapfile
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          lfs: true
    
      # Cache
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      # Test
      - name: Run tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2021.3.12f1
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      # Build
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          unityVersion: 2021.3.12f1
          targetPlatform: WebGL
          allowDirtyBuild: true

      # Output
      - uses: actions/upload-artifact@v3
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/staging'
        with:
          name: Build
          path: build

      - name: Deploy to Dev ðŸ“¦
        uses: JamesIves/github-pages-deploy-action@v4
        if: github.ref == 'refs/heads/main'
        with:
          folder: build/WebGL/WebGL
          target-folder: env/dev

      - name: Deploy to Staging ðŸ§°
        uses: JamesIves/github-pages-deploy-action@v4
        if: github.ref == 'refs/heads/staging'
        with:
          folder: build/WebGL/WebGL
          target-folder: env/staging

      - name: Deploy to Production ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        if: github.ref == 'refs/heads/release'
        with:
          folder: build/WebGL/WebGL
